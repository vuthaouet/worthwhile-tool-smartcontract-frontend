{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/plots/sankey/types.ts"],"names":[],"mappings":"","sourcesContent":["import { Data, Options, State, StyleAttr } from '../../types';\nimport { NodeDepth, NodeSort } from './layout';\n\n/**\n * node-link 数据类型的结构\n */\nexport type NodeLinkData = {\n  /**\n   * 节点数据\n   */\n  readonly nodes: {\n    /**\n     * id 唯一即可，一般可以直接等于 name\n     */\n    readonly id: string;\n    /**\n     * 节点的名称，用于 UI 上的现实\n     */\n    readonly name: string;\n    /**\n     * 节点的值，不传则节点大小有来源求和决定\n     */\n    readonly fixedValue?: number;\n  }[];\n  /**\n   *\n   */\n  readonly links: {\n    /**\n     * 来源节点在 nodes 中的 index\n     */\n    readonly source: number;\n    /**\n     * 目标节点在 nodes 中的 index\n     */\n    readonly target: number;\n    /**\n     * 边的值\n     */\n    readonly value: number;\n  }[];\n};\n\n/** 配置类型定义 */\nexport interface SankeyOptions extends Omit<Options, 'data' | 'xField' | 'yField' | 'xAxis' | 'yAxis'> {\n  /**\n   * 数据集的类型，默认为 detail\n   */\n  readonly dataType?: 'node-link' | 'detail';\n  /**\n   * 来源字段，dataType = 'node-link' 的时候，不用传\n   */\n  readonly sourceField?: string;\n  /**\n   * 去向字段，dataType = 'node-link' 的时候，不用传\n   */\n  readonly targetField?: string;\n  /**\n   * 权重字段，dataType = 'node-link' 的时候，不用传\n   */\n  readonly weightField?: string;\n  /**\n   * 附加的 元字段\n   */\n  readonly rawFields?: string[];\n  /**\n   * 数据\n   */\n  readonly data: Data | NodeLinkData;\n  /**\n   * 节点宽度的比如，参考画布的宽度，默认值为 0.008\n   */\n  readonly nodeWidthRatio?: number;\n  /**\n   * 节点宽度的像素设置，优先级高于 nodeWidthRatio\n   */\n  readonly nodeWidth?: number;\n  /**\n   * 节点之间的间距比例，参考画布高度，默认值为 0.03\n   */\n  readonly nodePaddingRatio?: number;\n  /**\n   * 节点间距的像素设置，优先级高于 nodePaddingRatio\n   */\n  readonly nodePadding?: number;\n  /**\n   * 节点对齐的方式，默认为 justify\n   */\n  readonly nodeAlign?: 'left' | 'right' | 'center' | 'justify';\n  /**\n   * 节点排序方式，默认为空\n   */\n  readonly nodeSort?: NodeSort;\n  /**\n   * 节点排放分层的顺序，从 0 开始，并且返回值需要保证所有的层级都有节点\n   */\n  readonly nodeDepth?: NodeDepth;\n  /**\n   * 节点样式\n   */\n  readonly nodeStyle?: StyleAttr;\n  /**\n   * 节点状态样式\n   */\n  readonly nodeState?: State;\n  /**\n   * 边样式\n   */\n  readonly edgeStyle?: StyleAttr;\n  /**\n   * 边状态样式\n   */\n  readonly edgeState?: State;\n  /**\n   * 节点位置是否可以拖拽，默认为 false\n   */\n  readonly nodeDraggable?: boolean;\n}\n"]}