{"ast":null,"code":"var _jsxFileName = \"/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Rate, Checkbox, Row, Col, Input } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Option } from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport { combine_results_api, uploadfile, wortwhile } from \"./wortwhile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nclass MyUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadings: []\n    };\n\n    this.handleUpload = ({\n      fileList\n    }) => {\n      console.log(\"vào handleUpload\"); //---------------^^^^^----------------\n      // this is equivalent to your \"const img = event.target.files[0]\"\n      // here, antd is giving you an array of files, just like event.target.files\n      // but the structure is a bit different that the original file\n      // the original file is located at the `originFileObj` key of each of this files\n      // so `event.target.files[0]` is actually fileList[0].originFileObj\n\n      console.log('fileList', fileList); // you store them in state, so that you can make a http req with them later\n\n      this.setState({\n        fileList\n      });\n    };\n\n    this.handleSubmit = async event => {\n      console.log(\"vào handleSubmit\");\n      event.preventDefault();\n      console.log(event.target[0].value);\n      const formData = new FormData();\n      formData.append(\"type\", event.target.type.value);\n      formData.append(\"project_name\", event.target.project_name.value);\n      formData.append(\"list_tool\", event.target.list_tool.value);\n      formData.append(\"file\", this.state.fileList[0].originFileObj); // const data = {\n      //     type: values['type'],\n      //     project_name: values[\"project_name\"]\n      // }\n      // values[\"file\"].map((file) => {\n      //     formData.append(\"file\", file.originFileObj);\n      //     // data.file (\"file\", file.originFileObj);\n      // });\n\n      console.log(\"formData.values()\");\n      console.log(...formData); // let check = uploadfile(formData.)\n\n      let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData).then(res => {\n        return {\n          success: true,\n          data: res.data\n        };\n      }).catch(err => alert(\"File Upload Error\")); // if (res) {\n      //     console.log(res)\n      //     let check = await wortwhile(res.data)\n      //     await combine_results_api(values[\"project_name\"])\n      // }\n    };\n\n    this.onFinish = values => {\n      console.log(\"onFinish\");\n      console.log(values);\n      console.log(\"vào onFinish\"); // this.handleSubmit\n      // submitForm(values)\n    };\n  }\n\n  render() {\n    const {\n      loadings\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"validate_other\",\n      ...formItemLayout,\n      // onFinish={this.onFinish}\n      enctype: \"multipart/form-data\",\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"project_name\",\n        label: \"Your project name\",\n        rules: [{\n          required: true,\n          message: 'Please input your project name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your project name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"list_tool\",\n        label: \"Tool\",\n        rules: [{\n          required: true,\n          message: 'Please choose tool'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"mythril\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Mythril\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"slither\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Slither\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"oyente\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Oyente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"honeybadger\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Honeybadger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"type\",\n        label: \"type\",\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please input your type'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Please input your type\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"file\",\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"repo\",\n            children: \"Repo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"linkRepo\",\n        label: \"Link Repo\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input link repo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"file\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"file\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n            name: \"files\",\n            beforeUpload: () => false,\n            fileList: normFile,\n            onChange: this.handleUpload,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Support for a single or bulk upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          onClick: this.handleSubmit,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\n;\nexport default MyUpload;","map":{"version":3,"sources":["/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js"],"names":["React","useState","Form","Select","InputNumber","Switch","Radio","Slider","Button","Upload","Rate","Checkbox","Row","Col","Input","InboxOutlined","Option","axios","combine_results_api","uploadfile","wortwhile","baseUrl","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","MyUpload","Component","state","loadings","handleUpload","setState","handleSubmit","event","preventDefault","target","value","formData","FormData","append","type","project_name","list_tool","originFileObj","res","post","then","success","data","catch","err","alert","onFinish","values","render","required","message","lineHeight","offset"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Rate,\n    Checkbox,\n    Row,\n    Col, Input,\n} from 'antd';\n\nimport {  InboxOutlined } from '@ant-design/icons';\nimport {Option} from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport {combine_results_api, uploadfile, wortwhile} from \"./wortwhile\";\n\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = (e) => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n        return e;\n    }\n\n    return e && e.fileList;\n};\nclass MyUpload extends React.Component {\n    state = {\n        loadings: [],\n    };\n\n    // submitForm = async (values) => {\n    //     const formData = new FormData();\n    //     formData.append(\"type\", values['type']);\n    //     formData.append(\"project_name\", values[\"project_name\"]);\n    //     formData.append(\"list_tool\", values[\"list_tool\"]);\n    //     const data = {\n    //         type: values['type'],\n    //         project_name: values[\"project_name\"]\n    //     }\n    //     values[\"file\"].map((file) => {\n    //         formData.append(\"file\", file.originFileObj);\n    //         // data.file (\"file\", file.originFileObj);\n    //     });\n    //     console.log(\"formData.values()\")\n    //     console.log(...formData)\n    //     // let check = uploadfile(formData.)\n    //     let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData)\n    //         .then((res) => {\n    //             return {\n    //                 success: true,\n    //                 data: res.data,\n    //             }\n    //         })\n    //         .catch((err) => alert(\"File Upload Error\"));\n    //     if (res ){\n    //         console.log(res)\n    //         let check = await wortwhile(res.data)\n    //         await combine_results_api(values[\"project_name\"])\n    //     }\n    // };\n    handleUpload = ({ fileList }) => {\n        console.log(\"vào handleUpload\")\n        //---------------^^^^^----------------\n        // this is equivalent to your \"const img = event.target.files[0]\"\n        // here, antd is giving you an array of files, just like event.target.files\n        // but the structure is a bit different that the original file\n        // the original file is located at the `originFileObj` key of each of this files\n        // so `event.target.files[0]` is actually fileList[0].originFileObj\n        console.log('fileList', fileList);\n\n        // you store them in state, so that you can make a http req with them later\n        this.setState({ fileList });\n    };\n    handleSubmit = async event => {\n        console.log(\"vào handleSubmit\")\n        event.preventDefault();\n        console.log(event.target[0].value)\n\n        const formData = new FormData();\n        formData.append(\"type\",event.target.type.value);\n        formData.append(\"project_name\", event.target.project_name.value);\n        formData.append(\"list_tool\",event.target.list_tool.value);\n        formData.append(\"file\", this.state.fileList[0].originFileObj);\n        // const data = {\n        //     type: values['type'],\n        //     project_name: values[\"project_name\"]\n        // }\n        // values[\"file\"].map((file) => {\n        //     formData.append(\"file\", file.originFileObj);\n        //     // data.file (\"file\", file.originFileObj);\n        // });\n        console.log(\"formData.values()\")\n        console.log(...formData)\n        // let check = uploadfile(formData.)\n        let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData)\n            .then((res) => {\n                return {\n                    success: true,\n                    data: res.data,\n                }\n            })\n            .catch((err) => alert(\"File Upload Error\"));\n        // if (res) {\n        //     console.log(res)\n        //     let check = await wortwhile(res.data)\n        //     await combine_results_api(values[\"project_name\"])\n        // }\n    }\n    onFinish = (values) => {\n        console.log(\"onFinish\")\n        console.log(values)\n        console.log(\"vào onFinish\")\n        // this.handleSubmit\n        // submitForm(values)\n    };\n    render() {\n        const { loadings } = this.state;\n        return (\n        <Form\n            name=\"validate_other\"\n            {...formItemLayout}\n            // onFinish={this.onFinish}\n            enctype=\"multipart/form-data\"\n\n        >\n            <Form.Item\n                {...formItemLayout}\n                name=\"project_name\"\n                label=\"Your project name\"\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your project name',\n                    },\n                ]}\n            >\n                <Input placeholder=\"Please input your project name\" />\n            </Form.Item>\n            <Form.Item name=\"list_tool\" label=\"Tool\"\n                       rules={[\n                           {\n                               required: true,\n                               message: 'Please choose tool',\n                           },\n                       ]}>\n                <Checkbox.Group>\n                    <Row>\n                        <Col span={4}>\n                            <Checkbox\n                                value=\"mythril\"\n                                style={{\n                                    lineHeight: '32px',\n                                }}\n                            >\n                                Mythril\n                            </Checkbox>\n                        </Col>\n                        <Col span={8}>\n                            <Checkbox\n                                value=\"slither\"\n                                style={{\n                                    lineHeight: '32px',\n                                }}\n                            >\n                                Slither\n                            </Checkbox>\n                        </Col>\n                        <Col span={8}>\n                            <Checkbox\n                                value=\"oyente\"\n                                style={{\n                                    lineHeight: '32px',\n                                }}\n                            >\n                                Oyente\n                            </Checkbox>\n                        </Col>\n                        <Col span={8}>\n                            <Checkbox\n                                value=\"honeybadger\"\n                                style={{\n                                    lineHeight: '32px',\n                                }}\n                            >\n                                Honeybadger\n                            </Checkbox>\n                        </Col>\n\n                    </Row>\n                </Checkbox.Group>\n            </Form.Item>\n            <Form.Item\n                name=\"type\"\n                label=\"type\"\n                hasFeedback\n                rules={[\n                    {\n                        required: true,\n                        message: 'Please input your type',\n                    },\n                ]}\n            >\n                <Select placeholder=\"Please input your type\">\n                    <Option value=\"file\">File</Option>\n                    <Option value=\"repo\">Repo</Option>\n                </Select>\n            </Form.Item>\n            <Form.Item\n                {...formItemLayout}\n                name=\"linkRepo\"\n                label=\"Link Repo\"\n            >\n                <Input placeholder=\"Please input link repo\" />\n            </Form.Item>\n            <Form.Item label=\"file\">\n                <Form.Item name=\"file\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n                    <Upload.Dragger name=\"files\" beforeUpload={() => false} fileList={normFile} onChange={this.handleUpload}>\n                        <p className=\"ant-upload-drag-icon\">\n                            <InboxOutlined />\n                        </p>\n                        <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                        <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                    </Upload.Dragger>\n                </Form.Item>\n            </Form.Item>\n\n            <Form.Item\n                wrapperCol={{\n                    span: 12,\n                    offset: 6,\n                }}\n            >\n                <Button type=\"primary\" htmlType=\"submit\" onClick={this.handleSubmit}>\n                    Submit\n                </Button>\n            </Form.Item>\n        </Form>\n    );\n}\n};\n\nexport default MyUpload"]},"metadata":{},"sourceType":"module"}