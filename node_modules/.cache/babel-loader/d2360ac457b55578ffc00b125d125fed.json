{"ast":null,"code":"import axios from 'axios';\nconst baseUrl = \"http://localhost:5000\";\nexport const createApiRequest = async ({\n  url,\n  method,\n  data,\n  params\n}) => {\n  try {\n    const {\n      data: resp\n    } = await axios({\n      method,\n      url: `${baseUrl}${url}`,\n      data,\n      params\n    });\n    return {\n      success: true,\n      data: resp\n    };\n  } catch (e) {\n    const {\n      response\n    } = e;\n    const message = response ? response.statusText : e.message || e;\n    const data = response ? response.data : '';\n    return {\n      success: false,\n      message,\n      data\n    };\n  }\n};","map":{"version":3,"sources":["/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/index.js"],"names":["axios","baseUrl","createApiRequest","url","method","data","params","resp","success","e","response","message","statusText"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,uBAAhB;AACA,OAAO,MAAMC,gBAAgB,GAAG,OAAO;AAACC,EAAAA,GAAD;AAAMC,EAAAA,MAAN;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA;AAApB,CAAP,KAAuC;AACnE,MAAI;AACA,UAAM;AAACD,MAAAA,IAAI,EAAEE;AAAP,QAAe,MAAMP,KAAK,CAAC;AAC7BI,MAAAA,MAD6B;AAE7BD,MAAAA,GAAG,EAAG,GAAEF,OAAQ,GAAEE,GAAI,EAFO;AAG7BE,MAAAA,IAH6B;AAI7BC,MAAAA;AAJ6B,KAAD,CAAhC;AAOA,WAAO;AACHE,MAAAA,OAAO,EAAE,IADN;AAEHH,MAAAA,IAAI,EAAEE;AAFH,KAAP;AAIH,GAZD,CAYE,OAAOE,CAAP,EAAU;AACR,UAAM;AAACC,MAAAA;AAAD,QAAaD,CAAnB;AACA,UAAME,OAAO,GAAGD,QAAQ,GAAGA,QAAQ,CAACE,UAAZ,GAAyBH,CAAC,CAACE,OAAF,IAAaF,CAA9D;AACA,UAAMJ,IAAI,GAAGK,QAAQ,GAAGA,QAAQ,CAACL,IAAZ,GAAmB,EAAxC;AACA,WAAO;AACHG,MAAAA,OAAO,EAAE,KADN;AAEHG,MAAAA,OAFG;AAGHN,MAAAA;AAHG,KAAP;AAKH;AACJ,CAvBM","sourcesContent":["import axios from 'axios'\nconst baseUrl = \"http://localhost:5000\";\nexport const createApiRequest = async ({url, method, data, params}) => {\n    try {\n        const {data: resp} = await axios({\n            method,\n            url: `${baseUrl}${url}`,\n            data,\n            params,\n        })\n\n        return {\n            success: true,\n            data: resp,\n        }\n    } catch (e) {\n        const {response} = e\n        const message = response ? response.statusText : e.message || e\n        const data = response ? response.data : ''\n        return {\n            success: false,\n            message,\n            data\n        }\n    }\n}"]},"metadata":{},"sourceType":"module"}