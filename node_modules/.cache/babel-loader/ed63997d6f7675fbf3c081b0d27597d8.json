{"ast":null,"code":"var _jsxFileName = \"/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js\";\nimport React, { useState } from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Rate, Checkbox, Row, Col, Input } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Option } from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport { combine_results_api, uploadfile, wortwhile } from \"./wortwhile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nasync function submitForm(values) {\n  const formData = new FormData();\n  formData.append(\"type\", values['type']);\n  formData.append(\"project_name\", values[\"project_name\"]);\n  formData.append(\"list_tool\", values[\"list_tool\"]);\n  const data = {\n    type: values['type'],\n    project_name: values[\"project_name\"]\n  };\n  values[\"file\"].map(file => {\n    formData.append(\"file\", file.originFileObj); // data.file (\"file\", file.originFileObj);\n  });\n  console.log(\"formData.values()\");\n  console.log(...formData); // let check = uploadfile(formData.)\n\n  let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData).then(res => {\n    return {\n      success: true,\n      data: res.data\n    };\n  }).catch(err => alert(\"File Upload Error\"));\n\n  if (res) {\n    console.log(res);\n    let check = await wortwhile(res.data);\n    await combine_results_api(values[\"project_name\"]);\n  }\n}\n\nclass MyUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadings: []\n    };\n\n    this.handleUpload = ({\n      fileList\n    }) => {\n      console.log(\"vào handleUpload\"); //---------------^^^^^----------------\n      // this is equivalent to your \"const img = event.target.files[0]\"\n      // here, antd is giving you an array of files, just like event.target.files\n      // but the structure is a bit different that the original file\n      // the original file is located at the `originFileObj` key of each of this files\n      // so `event.target.files[0]` is actually fileList[0].originFileObj\n\n      console.log('fileList', fileList); // you store them in state, so that you can make a http req with them later\n\n      this.setState({\n        fileList\n      });\n    };\n\n    this.onFinish = values => {\n      console.log(\"onFinish\");\n      console.log(values);\n      console.log(\"vào onFinish\"); // this.handleSubmit\n\n      submitForm(values);\n    };\n\n    this.enterLoading = index => {\n      this.setState(({\n        loadings\n      }) => {\n        const newLoadings = [...loadings];\n        newLoadings[index] = true;\n        return {\n          loadings: newLoadings\n        };\n      });\n      setTimeout(() => {\n        this.setState(({\n          loadings\n        }) => {\n          const newLoadings = [...loadings];\n          newLoadings[index] = false;\n          return {\n            loadings: newLoadings\n          };\n        });\n      }, 6000);\n    };\n  }\n\n  render() {\n    const {\n      loadings\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Form, {\n      name: \"validate_other\",\n      ...formItemLayout,\n      onFinish: this.onFinish,\n      enctype: \"multipart/form-data\" // onSubmit={this.handleSubmit}\n      ,\n      children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"project_name\",\n        label: \"Your project name\",\n        rules: [{\n          required: true,\n          message: 'Please input your project name'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input your project name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"list_tool\",\n        label: \"Tool\",\n        rules: [{\n          required: true,\n          message: 'Please choose tool'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              span: 4,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"mythril\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Mythril\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"slither\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Slither\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"oyente\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Oyente\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              span: 8,\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: \"honeybadger\",\n                style: {\n                  lineHeight: '32px'\n                },\n                children: \"Honeybadger\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        name: \"type\",\n        label: \"type\",\n        hasFeedback: true,\n        rules: [{\n          required: true,\n          message: 'Please input your type'\n        }],\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          placeholder: \"Please input your type\",\n          children: [/*#__PURE__*/_jsxDEV(Option, {\n            value: \"file\",\n            children: \"File\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Option, {\n            value: \"repo\",\n            children: \"Repo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n        name: \"linkRepo\",\n        label: \"Link Repo\",\n        children: /*#__PURE__*/_jsxDEV(Input, {\n          placeholder: \"Please input link repo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        label: \"file\",\n        children: /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"file\",\n          valuePropName: \"fileList\",\n          getValueFromEvent: normFile,\n          noStyle: true,\n          children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n            name: \"files\",\n            beforeUpload: () => false,\n            fileList: normFile,\n            onChange: this.handleUpload,\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-drag-icon\",\n              children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-text\",\n              children: \"Click or drag file to this area to upload\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"ant-upload-hint\",\n              children: \"Support for a single or bulk upload.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n        wrapperCol: {\n          span: 12,\n          offset: 6\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: loadings[2],\n          onClick: () => this.enterLoading(2),\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default MyUpload;","map":{"version":3,"sources":["/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js"],"names":["React","useState","Form","Select","InputNumber","Switch","Radio","Slider","Button","Upload","Rate","Checkbox","Row","Col","Input","InboxOutlined","Option","axios","combine_results_api","uploadfile","wortwhile","baseUrl","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","submitForm","values","formData","FormData","append","data","type","project_name","map","file","originFileObj","res","post","then","success","catch","err","alert","check","MyUpload","Component","state","loadings","handleUpload","setState","onFinish","enterLoading","index","newLoadings","setTimeout","render","required","message","lineHeight","offset"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,oBAAP;AACA,OAAO,cAAP;AACA,SACIC,IADJ,EAEIC,MAFJ,EAGIC,WAHJ,EAIIC,MAJJ,EAKIC,KALJ,EAMIC,MANJ,EAOIC,MAPJ,EAQIC,MARJ,EASIC,IATJ,EAUIC,QAVJ,EAWIC,GAXJ,EAYIC,GAZJ,EAYSC,KAZT,QAaO,MAbP;AAeA,SAAQC,aAAR,QAA4B,mBAA5B;AACA,SAAQC,MAAR,QAAqB,kBAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,mBAAR,EAA6BC,UAA7B,EAAyCC,SAAzC,QAAyD,aAAzD;;AAEA,MAAMC,OAAO,GAAG,uBAAhB;AACA,MAAMC,cAAc,GAAG;AACnBC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,IAAI,EAAE;AADA,GADS;AAInBC,EAAAA,UAAU,EAAE;AACRD,IAAAA,IAAI,EAAE;AADE;AAJO,CAAvB;;AASA,MAAME,QAAQ,GAAIC,CAAD,IAAO;AACpBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,CAA7B;;AAEA,MAAIG,KAAK,CAACC,OAAN,CAAcJ,CAAd,CAAJ,EAAsB;AAClB,WAAOA,CAAP;AACH;;AAED,SAAOA,CAAC,IAAIA,CAAC,CAACK,QAAd;AACH,CARD;;AAUA,eAAeC,UAAf,CAA0BC,MAA1B,EAAkC;AAC9B,QAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;AACAD,EAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBH,MAAM,CAAC,MAAD,CAA9B;AACAC,EAAAA,QAAQ,CAACE,MAAT,CAAgB,cAAhB,EAAgCH,MAAM,CAAC,cAAD,CAAtC;AACAC,EAAAA,QAAQ,CAACE,MAAT,CAAgB,WAAhB,EAA6BH,MAAM,CAAC,WAAD,CAAnC;AACA,QAAMI,IAAI,GAAG;AACTC,IAAAA,IAAI,EAAEL,MAAM,CAAC,MAAD,CADH;AAETM,IAAAA,YAAY,EAAEN,MAAM,CAAC,cAAD;AAFX,GAAb;AAIAA,EAAAA,MAAM,CAAC,MAAD,CAAN,CAAeO,GAAf,CAAoBC,IAAD,IAAU;AACzBP,IAAAA,QAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwBK,IAAI,CAACC,aAA7B,EADyB,CAEzB;AACH,GAHD;AAIAf,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAGM,QAAf,EAd8B,CAe9B;;AACA,MAAIS,GAAG,GAAG,MAAM3B,KAAK,CAAC4B,IAAN,CAAY,GAAExB,OAAQ,GAAE,uBAAwB,EAAhD,EAAmDc,QAAnD,EACXW,IADW,CACLF,GAAD,IAAS;AACX,WAAO;AACHG,MAAAA,OAAO,EAAE,IADN;AAEHT,MAAAA,IAAI,EAAEM,GAAG,CAACN;AAFP,KAAP;AAIH,GANW,EAOXU,KAPW,CAOJC,GAAD,IAASC,KAAK,CAAC,mBAAD,CAPT,CAAhB;;AAQA,MAAIN,GAAJ,EAAS;AACLhB,IAAAA,OAAO,CAACC,GAAR,CAAYe,GAAZ;AACA,QAAIO,KAAK,GAAG,MAAM/B,SAAS,CAACwB,GAAG,CAACN,IAAL,CAA3B;AACA,UAAMpB,mBAAmB,CAACgB,MAAM,CAAC,cAAD,CAAP,CAAzB;AACH;AAEJ;;AAED,MAAMkB,QAAN,SAAuBpD,KAAK,CAACqD,SAA7B,CAAuC;AAAA;AAAA;AAAA,SACnCC,KADmC,GAC3B;AACJC,MAAAA,QAAQ,EAAE;AADN,KAD2B;;AAAA,SAKnCC,YALmC,GAKpB,CAAC;AAACxB,MAAAA;AAAD,KAAD,KAAgB;AAC3BJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAD2B,CAE3B;AACA;AACA;AACA;AACA;AACA;;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBG,QAAxB,EAR2B,CAU3B;;AACA,WAAKyB,QAAL,CAAc;AAACzB,QAAAA;AAAD,OAAd;AACH,KAjBkC;;AAAA,SAkBnC0B,QAlBmC,GAkBvBxB,MAAD,IAAY;AACnBN,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACAD,MAAAA,OAAO,CAACC,GAAR,CAAYK,MAAZ;AACAN,MAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,EAHmB,CAInB;;AACAI,MAAAA,UAAU,CAACC,MAAD,CAAV;AACH,KAxBkC;;AAAA,SAyBnCyB,YAzBmC,GAyBpBC,KAAK,IAAI;AACpB,WAAKH,QAAL,CAAc,CAAC;AAAEF,QAAAA;AAAF,OAAD,KAAkB;AAC5B,cAAMM,WAAW,GAAG,CAAC,GAAGN,QAAJ,CAApB;AACAM,QAAAA,WAAW,CAACD,KAAD,CAAX,GAAqB,IAArB;AAEA,eAAO;AACHL,UAAAA,QAAQ,EAAEM;AADP,SAAP;AAGH,OAPD;AAQAC,MAAAA,UAAU,CAAC,MAAM;AACb,aAAKL,QAAL,CAAc,CAAC;AAAEF,UAAAA;AAAF,SAAD,KAAkB;AAC5B,gBAAMM,WAAW,GAAG,CAAC,GAAGN,QAAJ,CAApB;AACAM,UAAAA,WAAW,CAACD,KAAD,CAAX,GAAqB,KAArB;AAEA,iBAAO;AACHL,YAAAA,QAAQ,EAAEM;AADP,WAAP;AAGH,SAPD;AAQH,OATS,EASP,IATO,CAAV;AAUH,KA5CkC;AAAA;;AA8CnCE,EAAAA,MAAM,GAAG;AACL,UAAM;AAACR,MAAAA;AAAD,QAAa,KAAKD,KAAxB;AACA,wBACI,QAAC,IAAD;AACI,MAAA,IAAI,EAAC,gBADT;AAAA,SAEQhC,cAFR;AAGI,MAAA,QAAQ,EAAE,KAAKoC,QAHnB;AAII,MAAA,OAAO,EAAC,qBAJZ,CAKI;AALJ;AAAA,8BAQI,QAAC,IAAD,CAAM,IAAN,OACQpC,cADR;AAEI,QAAA,IAAI,EAAC,cAFT;AAGI,QAAA,KAAK,EAAC,mBAHV;AAII,QAAA,KAAK,EAAE,CACH;AACI0C,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE;AAFb,SADG,CAJX;AAAA,+BAWI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,cARJ,eAqBI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,IAAI,EAAC,WAAhB;AAA4B,QAAA,KAAK,EAAC,MAAlC;AACW,QAAA,KAAK,EAAE,CACH;AACID,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE;AAFb,SADG,CADlB;AAAA,+BAOI,QAAC,QAAD,CAAU,KAAV;AAAA,iCACI,QAAC,GAAD;AAAA,oCACI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,SADV;AAEI,gBAAA,KAAK,EAAE;AACHC,kBAAAA,UAAU,EAAE;AADT,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAWI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,SADV;AAEI,gBAAA,KAAK,EAAE;AACHA,kBAAAA,UAAU,EAAE;AADT,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAqBI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,QADV;AAEI,gBAAA,KAAK,EAAE;AACHA,kBAAAA,UAAU,EAAE;AADT,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBArBJ,eA+BI,QAAC,GAAD;AAAK,cAAA,IAAI,EAAE,CAAX;AAAA,qCACI,QAAC,QAAD;AACI,gBAAA,KAAK,EAAC,aADV;AAEI,gBAAA,KAAK,EAAE;AACHA,kBAAAA,UAAU,EAAE;AADT,iBAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBA/BJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,cArBJ,eA0EI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,KAAK,EAAC,MAFV;AAGI,QAAA,WAAW,MAHf;AAII,QAAA,KAAK,EAAE,CACH;AACIF,UAAAA,QAAQ,EAAE,IADd;AAEIC,UAAAA,OAAO,EAAE;AAFb,SADG,CAJX;AAAA,+BAWI,QAAC,MAAD;AAAQ,UAAA,WAAW,EAAC,wBAApB;AAAA,kCACI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI,QAAC,MAAD;AAAQ,YAAA,KAAK,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAXJ;AAAA;AAAA;AAAA;AAAA,cA1EJ,eA0FI,QAAC,IAAD,CAAM,IAAN,OACQ3C,cADR;AAEI,QAAA,IAAI,EAAC,UAFT;AAGI,QAAA,KAAK,EAAC,WAHV;AAAA,+BAKI,QAAC,KAAD;AAAO,UAAA,WAAW,EAAC;AAAnB;AAAA;AAAA;AAAA;AAAA;AALJ;AAAA;AAAA;AAAA;AAAA,cA1FJ,eAiGI,QAAC,IAAD,CAAM,IAAN;AAAW,QAAA,KAAK,EAAC,MAAjB;AAAA,+BACI,QAAC,IAAD,CAAM,IAAN;AAAW,UAAA,IAAI,EAAC,MAAhB;AAAuB,UAAA,aAAa,EAAC,UAArC;AAAgD,UAAA,iBAAiB,EAAEI,QAAnE;AAA6E,UAAA,OAAO,MAApF;AAAA,iCACI,QAAC,MAAD,CAAQ,OAAR;AAAgB,YAAA,IAAI,EAAC,OAArB;AAA6B,YAAA,YAAY,EAAE,MAAM,KAAjD;AAAwD,YAAA,QAAQ,EAAEA,QAAlE;AACgB,YAAA,QAAQ,EAAE,KAAK8B,YAD/B;AAAA,oCAEI;AAAG,cAAA,SAAS,EAAC,sBAAb;AAAA,qCACI,QAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAKI;AAAG,cAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAG,cAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAjGJ,eA8GI,QAAC,IAAD,CAAM,IAAN;AACI,QAAA,UAAU,EAAE;AACRhC,UAAAA,IAAI,EAAE,EADE;AAER2C,UAAAA,MAAM,EAAE;AAFA,SADhB;AAAA,+BAMI,QAAC,MAAD;AAAQ,UAAA,IAAI,EAAC,SAAb;AAAuB,UAAA,QAAQ,EAAC,QAAhC;AAAyC,UAAA,OAAO,EAAEZ,QAAQ,CAAC,CAAD,CAA1D;AACQ,UAAA,OAAO,EAAE,MAAM,KAAKI,YAAL,CAAkB,CAAlB,CADvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AANJ;AAAA;AAAA;AAAA;AAAA,cA9GJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA4HH;;AA5KkC;;AA6KtC;AAED,eAAeP,QAAf","sourcesContent":["import React, {useState} from 'react';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Rate,\n    Checkbox,\n    Row,\n    Col, Input,\n} from 'antd';\n\nimport {InboxOutlined} from '@ant-design/icons';\nimport {Option} from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport {combine_results_api, uploadfile, wortwhile} from \"./wortwhile\";\n\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = (e) => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n        return e;\n    }\n\n    return e && e.fileList;\n};\n\nasync function submitForm(values) {\n    const formData = new FormData();\n    formData.append(\"type\", values['type']);\n    formData.append(\"project_name\", values[\"project_name\"]);\n    formData.append(\"list_tool\", values[\"list_tool\"]);\n    const data = {\n        type: values['type'],\n        project_name: values[\"project_name\"]\n    }\n    values[\"file\"].map((file) => {\n        formData.append(\"file\", file.originFileObj);\n        // data.file (\"file\", file.originFileObj);\n    });\n    console.log(\"formData.values()\")\n    console.log(...formData)\n    // let check = uploadfile(formData.)\n    let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData)\n        .then((res) => {\n            return {\n                success: true,\n                data: res.data,\n            }\n        })\n        .catch((err) => alert(\"File Upload Error\"));\n    if (res) {\n        console.log(res)\n        let check = await wortwhile(res.data)\n        await combine_results_api(values[\"project_name\"])\n    }\n\n}\n\nclass MyUpload extends React.Component {\n    state = {\n        loadings: [],\n    };\n\n    handleUpload = ({fileList}) => {\n        console.log(\"vào handleUpload\")\n        //---------------^^^^^----------------\n        // this is equivalent to your \"const img = event.target.files[0]\"\n        // here, antd is giving you an array of files, just like event.target.files\n        // but the structure is a bit different that the original file\n        // the original file is located at the `originFileObj` key of each of this files\n        // so `event.target.files[0]` is actually fileList[0].originFileObj\n        console.log('fileList', fileList);\n\n        // you store them in state, so that you can make a http req with them later\n        this.setState({fileList});\n    };\n    onFinish = (values) => {\n        console.log(\"onFinish\")\n        console.log(values)\n        console.log(\"vào onFinish\")\n        // this.handleSubmit\n        submitForm(values)\n    };\n    enterLoading = index => {\n        this.setState(({ loadings }) => {\n            const newLoadings = [...loadings];\n            newLoadings[index] = true;\n\n            return {\n                loadings: newLoadings,\n            };\n        });\n        setTimeout(() => {\n            this.setState(({ loadings }) => {\n                const newLoadings = [...loadings];\n                newLoadings[index] = false;\n\n                return {\n                    loadings: newLoadings,\n                };\n            });\n        }, 6000);\n    };\n\n    render() {\n        const {loadings} = this.state;\n        return (\n            <Form\n                name=\"validate_other\"\n                {...formItemLayout}\n                onFinish={this.onFinish}\n                enctype=\"multipart/form-data\"\n                // onSubmit={this.handleSubmit}\n\n            >\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"project_name\"\n                    label=\"Your project name\"\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your project name',\n                        },\n                    ]}\n                >\n                    <Input placeholder=\"Please input your project name\"/>\n                </Form.Item>\n                <Form.Item name=\"list_tool\" label=\"Tool\"\n                           rules={[\n                               {\n                                   required: true,\n                                   message: 'Please choose tool',\n                               },\n                           ]}>\n                    <Checkbox.Group>\n                        <Row>\n                            <Col span={4}>\n                                <Checkbox\n                                    value=\"mythril\"\n                                    style={{\n                                        lineHeight: '32px',\n                                    }}\n                                >\n                                    Mythril\n                                </Checkbox>\n                            </Col>\n                            <Col span={8}>\n                                <Checkbox\n                                    value=\"slither\"\n                                    style={{\n                                        lineHeight: '32px',\n                                    }}\n                                >\n                                    Slither\n                                </Checkbox>\n                            </Col>\n                            <Col span={8}>\n                                <Checkbox\n                                    value=\"oyente\"\n                                    style={{\n                                        lineHeight: '32px',\n                                    }}\n                                >\n                                    Oyente\n                                </Checkbox>\n                            </Col>\n                            <Col span={8}>\n                                <Checkbox\n                                    value=\"honeybadger\"\n                                    style={{\n                                        lineHeight: '32px',\n                                    }}\n                                >\n                                    Honeybadger\n                                </Checkbox>\n                            </Col>\n\n                        </Row>\n                    </Checkbox.Group>\n                </Form.Item>\n                <Form.Item\n                    name=\"type\"\n                    label=\"type\"\n                    hasFeedback\n                    rules={[\n                        {\n                            required: true,\n                            message: 'Please input your type',\n                        },\n                    ]}\n                >\n                    <Select placeholder=\"Please input your type\">\n                        <Option value=\"file\">File</Option>\n                        <Option value=\"repo\">Repo</Option>\n                    </Select>\n                </Form.Item>\n                <Form.Item\n                    {...formItemLayout}\n                    name=\"linkRepo\"\n                    label=\"Link Repo\"\n                >\n                    <Input placeholder=\"Please input link repo\"/>\n                </Form.Item>\n                <Form.Item label=\"file\">\n                    <Form.Item name=\"file\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n                        <Upload.Dragger name=\"files\" beforeUpload={() => false} fileList={normFile}\n                                        onChange={this.handleUpload}>\n                            <p className=\"ant-upload-drag-icon\">\n                                <InboxOutlined/>\n                            </p>\n                            <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                            <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                        </Upload.Dragger>\n                    </Form.Item>\n                </Form.Item>\n\n                <Form.Item\n                    wrapperCol={{\n                        span: 12,\n                        offset: 6,\n                    }}\n                >\n                    <Button type=\"primary\" htmlType=\"submit\" loading={loadings[2]}\n                            onClick={() => this.enterLoading(2)}>\n                        Submit\n                    </Button>\n                </Form.Item>\n            </Form>\n        );\n    }\n};\n\nexport default MyUpload"]},"metadata":{},"sourceType":"module"}