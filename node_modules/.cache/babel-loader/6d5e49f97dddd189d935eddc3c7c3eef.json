{"ast":null,"code":"import { __assign } from \"tslib\";\nimport { tooltip } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nexport { meta } from '../column/adaptor';\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\n\nfunction defaultOptions(params) {\n  var options = params.options;\n  var xField = options.xField,\n      yField = options.yField,\n      xAxis = options.xAxis,\n      yAxis = options.yAxis;\n  var position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right'\n  };\n  var verticalAxis = yAxis !== false ? __assign({\n    position: position[(yAxis === null || yAxis === void 0 ? void 0 : yAxis.position) || 'left']\n  }, yAxis) : false;\n  var horizontalAxis = xAxis !== false ? __assign({\n    position: position[(xAxis === null || xAxis === void 0 ? void 0 : xAxis.position) || 'bottom']\n  }, xAxis) : false;\n  return __assign(__assign({}, params), {\n    options: __assign(__assign({}, options), {\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis,\n      yAxis: horizontalAxis\n    })\n  });\n}\n/**\n * label 适配器\n * @param params\n */\n\n\nfunction label(params) {\n  var options = params.options;\n  var label = options.label; // label of bar charts default position is left, if plot has label\n\n  if (label && !label.position) {\n    label.position = 'left'; // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n\n    if (!label.layout) {\n      label.layout = [{\n        type: 'interval-adjust-position'\n      }, {\n        type: 'interval-hide-overlap'\n      }, {\n        type: 'adjust-color'\n      }, {\n        type: 'limit-in-plot',\n        cfg: {\n          action: 'hide'\n        }\n      }];\n    }\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      label: label\n    }\n  });\n}\n/**\n * legend 适配器\n * @param params\n */\n\n\nfunction legend(params) {\n  var options = params.options; // 默认 legend 位置\n\n  var seriesField = options.seriesField,\n      isStack = options.isStack;\n  var legend = options.legend;\n\n  if (seriesField) {\n    if (legend !== false) {\n      legend = __assign({\n        position: isStack ? 'top-left' : 'right-top'\n      }, legend || {});\n    }\n  } else {\n    legend = false;\n  }\n\n  return deepAssign({}, params, {\n    options: {\n      legend: legend\n    }\n  });\n}\n/**\n * coordinate 适配器\n * @param params\n */\n\n\nfunction coordinate(params) {\n  var chart = params.chart; // transpose column to bar 对角变换 & y 方向镜像变换\n\n  chart.coordinate({\n    actions: [['transpose'], ['reflect', 'y']]\n  });\n  return params;\n}\n/**\n * 柱形图适配器\n * @param params\n */\n\n\nexport function geometry(params) {\n  var chart = params.chart,\n      options = params.options;\n  var barStyle = options.barStyle,\n      barWidthRatio = options.barWidthRatio,\n      minBarWidth = options.minBarWidth,\n      maxBarWidth = options.maxBarWidth,\n      barBackground = options.barBackground;\n  return columnAdaptor({\n    chart: chart,\n    options: __assign(__assign({}, options), {\n      // rename attrs as column\n      columnStyle: barStyle,\n      columnWidthRatio: barWidthRatio,\n      minColumnWidth: minBarWidth,\n      maxColumnWidth: maxBarWidth,\n      columnBackground: barBackground\n    })\n  }, true);\n}\n/**\n * @param chart\n * @param options\n */\n\nexport function adaptor(params) {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}","map":{"version":3,"sources":["../../../src/plots/bar/adaptor.ts"],"names":[],"mappings":";AACA,SAAS,OAAT,QAAwB,sBAAxB;AACA,SAAS,UAAT,EAAqB,IAArB,QAAiC,aAAjC;AAEA,SAAS,OAAO,IAAI,aAApB,QAAyC,mBAAzC;AACA,SAAS,IAAT,QAAqB,mBAArB;AAGA;;;;AAIG;;AACH,SAAS,cAAT,CAAwB,MAAxB,EAAkD;AACxC,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AACA,MAAA,MAAM,GAA2B,OAAO,CAAlC,MAAN;AAAA,MAAQ,MAAM,GAAmB,OAAO,CAA1B,MAAd;AAAA,MAAgB,KAAK,GAAY,OAAO,CAAnB,KAArB;AAAA,MAAuB,KAAK,GAAK,OAAO,CAAZ,KAA5B;AAER,MAAM,QAAQ,GAAG;AACf,IAAA,IAAI,EAAE,QADS;AAEf,IAAA,KAAK,EAAE,KAFQ;AAGf,IAAA,GAAG,EAAE,MAHU;AAIf,IAAA,MAAM,EAAE;AAJO,GAAjB;AAOA,MAAM,YAAY,GAChB,KAAK,KAAK,KAAV,GACG,QAAA,CAAA;AACG,IAAA,QAAQ,EAAE,QAAQ,CAAC,CAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAP,KAAmB,MAApB;AADrB,GAAA,EAEM,KAFN,CADH,GAKI,KANN;AAOA,MAAM,cAAc,GAClB,KAAK,KAAK,KAAV,GACG,QAAA,CAAA;AACG,IAAA,QAAQ,EAAE,QAAQ,CAAC,CAAA,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAP,KAAmB,QAApB;AADrB,GAAA,EAEM,KAFN,CADH,GAKI,KANN;AAQA,SAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACK,MADL,CAAA,EACW;AACT,IAAA,OAAO,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACF,OADE,CAAA,EACK;AACV,MAAA,MAAM,EAAE,MADE;AAEV,MAAA,MAAM,EAAE,MAFE;AAGV;AACA,MAAA,KAAK,EAAE,YAJG;AAKV,MAAA,KAAK,EAAE;AALG,KADL;AADE,GADX,CAAA;AAWD;AAED;;;AAGG;;;AACH,SAAS,KAAT,CAAe,MAAf,EAAyC;AAC/B,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP;AACA,MAAA,KAAK,GAAK,OAAO,CAAZ,KAAL,CAF+B,CAGvC;;AACA,MAAI,KAAK,IAAI,CAAC,KAAK,CAAC,QAApB,EAA8B;AAC5B,IAAA,KAAK,CAAC,QAAN,GAAiB,MAAjB,CAD4B,CAE5B;;AACA,QAAI,CAAC,KAAK,CAAC,MAAX,EAAmB;AACjB,MAAA,KAAK,CAAC,MAAN,GAAe,CACb;AAAE,QAAA,IAAI,EAAE;AAAR,OADa,EAEb;AAAE,QAAA,IAAI,EAAE;AAAR,OAFa,EAGb;AAAE,QAAA,IAAI,EAAE;AAAR,OAHa,EAIb;AAAE,QAAA,IAAI,EAAE,eAAR;AAAyB,QAAA,GAAG,EAAE;AAAE,UAAA,MAAM,EAAE;AAAV;AAA9B,OAJa,CAAf;AAMD;AACF;;AAED,SAAO,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,OAAO,EAAE;AAAE,MAAA,KAAK,EAAA;AAAP;AAAX,GAAb,CAAjB;AACD;AAED;;;AAGG;;;AACH,SAAS,MAAT,CAAgB,MAAhB,EAA0C;AAChC,MAAA,OAAO,GAAK,MAAM,CAAX,OAAP,CADgC,CAGxC;;AACQ,MAAA,WAAW,GAAc,OAAO,CAArB,WAAX;AAAA,MAAa,OAAO,GAAK,OAAO,CAAZ,OAApB;AACF,MAAA,MAAM,GAAK,OAAO,CAAZ,MAAN;;AACN,MAAI,WAAJ,EAAiB;AACf,QAAI,MAAM,KAAK,KAAf,EAAsB;AACpB,MAAA,MAAM,GAAA,QAAA,CAAA;AACJ,QAAA,QAAQ,EAAE,OAAO,GAAG,UAAH,GAAgB;AAD7B,OAAA,EAEA,MAAM,IAAI,EAFV,CAAN;AAID;AACF,GAPD,MAOO;AACL,IAAA,MAAM,GAAG,KAAT;AACD;;AAED,SAAO,UAAU,CAAC,EAAD,EAAK,MAAL,EAAa;AAAE,IAAA,OAAO,EAAE;AAAE,MAAA,MAAM,EAAA;AAAR;AAAX,GAAb,CAAjB;AACD;AAED;;;AAGG;;;AACH,SAAS,UAAT,CAAoB,MAApB,EAA8C;AACpC,MAAA,KAAK,GAAK,MAAM,CAAX,KAAL,CADoC,CAE5C;;AACA,EAAA,KAAK,CAAC,UAAN,CAAiB;AAAE,IAAA,OAAO,EAAE,CAAC,CAAC,WAAD,CAAD,EAAgB,CAAC,SAAD,EAAY,GAAZ,CAAhB;AAAX,GAAjB;AACA,SAAO,MAAP;AACD;AAED;;;AAGG;;;AACH,OAAM,SAAU,QAAV,CAAmB,MAAnB,EAA6C;AACzC,MAAA,KAAK,GAAc,MAAM,CAApB,KAAL;AAAA,MAAO,OAAO,GAAK,MAAM,CAAX,OAAd;AAEA,MAAA,QAAQ,GAA6D,OAAO,CAApE,QAAR;AAAA,MAAU,aAAa,GAA8C,OAAO,CAArD,aAAvB;AAAA,MAAyB,WAAW,GAAiC,OAAO,CAAxC,WAApC;AAAA,MAAsC,WAAW,GAAoB,OAAO,CAA3B,WAAjD;AAAA,MAAmD,aAAa,GAAK,OAAO,CAAZ,aAAhE;AAER,SAAO,aAAa,CAClB;AACE,IAAA,KAAK,EAAA,KADP;AAEE,IAAA,OAAO,EAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACF,OADE,CAAA,EACK;AACV;AACA,MAAA,WAAW,EAAE,QAFH;AAGV,MAAA,gBAAgB,EAAE,aAHR;AAIV,MAAA,cAAc,EAAE,WAJN;AAKV,MAAA,cAAc,EAAE,WALN;AAMV,MAAA,gBAAgB,EAAE;AANR,KADL;AAFT,GADkB,EAalB,IAbkB,CAApB;AAeD;AAED;;;AAGG;;AACH,OAAM,SAAU,OAAV,CAAkB,MAAlB,EAA4C;AAChD;AACA,SAAO,IAAI,CAAqB,cAArB,EAAqC,KAArC,EAA4C,MAA5C,EAAoD,OAApD,EAA6D,UAA7D,EAAyE,QAAzE,CAAJ,CAAuF,MAAvF,CAAP;AACD","sourcesContent":["import { Params } from '../../core/adaptor';\nimport { tooltip } from '../../adaptor/common';\nimport { deepAssign, flow } from '../../utils';\nimport { Axis } from '../../types';\nimport { adaptor as columnAdaptor } from '../column/adaptor';\nexport { meta } from '../column/adaptor';\nimport { BarOptions } from './types';\n\n/**\n * 处理默认配置项\n * 1. switch xField、 yField\n * 2. switch xAxis、 yAxis and adjust axis.position configuration\n */\nfunction defaultOptions(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { xField, yField, xAxis, yAxis } = options;\n\n  const position = {\n    left: 'bottom',\n    right: 'top',\n    top: 'left',\n    bottom: 'right',\n  };\n\n  const verticalAxis =\n    yAxis !== false\n      ? {\n          position: position[yAxis?.position || 'left'],\n          ...yAxis,\n        }\n      : false;\n  const horizontalAxis =\n    xAxis !== false\n      ? {\n          position: position[xAxis?.position || 'bottom'],\n          ...xAxis,\n        }\n      : false;\n\n  return {\n    ...params,\n    options: {\n      ...options,\n      xField: yField,\n      yField: xField,\n      // 条形图 xAxis，yAxis 不可以做 deepAssign\n      xAxis: verticalAxis as Axis,\n      yAxis: horizontalAxis as Axis,\n    },\n  };\n}\n\n/**\n * label 适配器\n * @param params\n */\nfunction label(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n  const { label } = options;\n  // label of bar charts default position is left, if plot has label\n  if (label && !label.position) {\n    label.position = 'left';\n    // 配置默认的 label layout： 如果用户没有指定 layout 和 position， 则自动配置 layout\n    if (!label.layout) {\n      label.layout = [\n        { type: 'interval-adjust-position' },\n        { type: 'interval-hide-overlap' },\n        { type: 'adjust-color' },\n        { type: 'limit-in-plot', cfg: { action: 'hide' } },\n      ];\n    }\n  }\n\n  return deepAssign({}, params, { options: { label } });\n}\n\n/**\n * legend 适配器\n * @param params\n */\nfunction legend(params: Params<BarOptions>): Params<BarOptions> {\n  const { options } = params;\n\n  // 默认 legend 位置\n  const { seriesField, isStack } = options;\n  let { legend } = options;\n  if (seriesField) {\n    if (legend !== false) {\n      legend = {\n        position: isStack ? 'top-left' : 'right-top',\n        ...(legend || {}),\n      };\n    }\n  } else {\n    legend = false;\n  }\n\n  return deepAssign({}, params, { options: { legend } });\n}\n\n/**\n * coordinate 适配器\n * @param params\n */\nfunction coordinate(params: Params<BarOptions>): Params<BarOptions> {\n  const { chart } = params;\n  // transpose column to bar 对角变换 & y 方向镜像变换\n  chart.coordinate({ actions: [['transpose'], ['reflect', 'y']] });\n  return params;\n}\n\n/**\n * 柱形图适配器\n * @param params\n */\nexport function geometry(params: Params<BarOptions>) {\n  const { chart, options } = params;\n\n  const { barStyle, barWidthRatio, minBarWidth, maxBarWidth, barBackground } = options;\n\n  return columnAdaptor(\n    {\n      chart,\n      options: {\n        ...options,\n        // rename attrs as column\n        columnStyle: barStyle,\n        columnWidthRatio: barWidthRatio,\n        minColumnWidth: minBarWidth,\n        maxColumnWidth: maxBarWidth,\n        columnBackground: barBackground,\n      },\n    },\n    true\n  ) as Params<BarOptions>;\n}\n\n/**\n * @param chart\n * @param options\n */\nexport function adaptor(params: Params<BarOptions>): Params<BarOptions> {\n  // flow 的方式处理所有的配置到 G2 API\n  return flow<Params<BarOptions>>(defaultOptions, label, legend, tooltip, coordinate, geometry)(params);\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}