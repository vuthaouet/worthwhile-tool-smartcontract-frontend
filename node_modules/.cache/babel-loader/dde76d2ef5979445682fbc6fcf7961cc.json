{"ast":null,"code":"var _jsxFileName = \"/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport { Form, Select, InputNumber, Switch, Radio, Slider, Button, Upload, Rate, Checkbox, Row, Col, Input } from 'antd';\nimport { InboxOutlined } from '@ant-design/icons';\nimport { Option } from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport { combine_results_api, uploadfile, wortwhile } from \"./wortwhile\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n  labelCol: {\n    span: 6\n  },\n  wrapperCol: {\n    span: 14\n  }\n};\n\nconst normFile = e => {\n  console.log('Upload event:', e);\n\n  if (Array.isArray(e)) {\n    return e;\n  }\n\n  return e && e.fileList;\n};\n\nasync function submitForm(values) {\n  const formData = new FormData();\n  formData.append(\"type\", values['type']);\n  formData.append(\"project_name\", values[\"project_name\"]);\n  formData.append(\"list_tool\", values[\"list_tool\"]);\n  const data = {\n    type: values['type'],\n    project_name: values[\"project_name\"]\n  };\n  values[\"file\"].map(file => {\n    formData.append(\"file\", file.originFileObj); // data.file (\"file\", file.originFileObj);\n  });\n  console.log(\"formData.values()\");\n  console.log(...formData); // let check = uploadfile(formData.)\n\n  let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData).then(res => {\n    return {\n      success: true,\n      data: res.data\n    };\n  }).catch(err => alert(\"File Upload Error\"));\n\n  if (res) {\n    console.log(res);\n    let check = await wortwhile(res.data);\n    await combine_results_api(values[\"project_name\"]);\n  }\n}\n\nfunction tick() {\n  const element = /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Hello, world!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"It is \", new Date().toLocaleTimeString(), \".\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 9\n  }, this);\n\n  ReactDOM.render(element, document.getElementById('root'));\n}\n\nclass MyUpload extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      loadings: []\n    };\n\n    this.handleUpload = ({\n      fileList\n    }) => {\n      console.log(\"vào handleUpload\"); //---------------^^^^^----------------\n      // this is equivalent to your \"const img = event.target.files[0]\"\n      // here, antd is giving you an array of files, just like event.target.files\n      // but the structure is a bit different that the original file\n      // the original file is located at the `originFileObj` key of each of this files\n      // so `event.target.files[0]` is actually fileList[0].originFileObj\n\n      console.log('fileList', fileList); // you store them in state, so that you can make a http req with them later\n\n      this.setState({\n        fileList\n      });\n    };\n\n    this.onFinish = async values => {\n      console.log(\"onFinish\");\n      console.log(values);\n      console.log(\"vào onFinish\"); // this.handleSubmit\n\n      await submitForm(values);\n      this.setState(({\n        loadings\n      }) => {\n        const newLoadings = [...loadings];\n        newLoadings[2] = false;\n        return {\n          loadings: newLoadings\n        };\n      });\n    };\n\n    this.enterLoading = index => {\n      this.setState(({\n        loadings\n      }) => {\n        const newLoadings = [...loadings];\n        newLoadings[index] = true;\n        return {\n          loadings: newLoadings\n        };\n      }); // setTimeout(() => {\n      //     this.setState(({ loadings }) => {\n      //         const newLoadings = [...loadings];\n      //         newLoadings[index] = false;\n      //\n      //         return {\n      //             loadings: newLoadings,\n      //         };\n      //     });\n      // }, 12000);\n    };\n  }\n\n  render() {\n    const {\n      loadings\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Form, {\n        name: \"validate_other\",\n        ...formItemLayout,\n        onFinish: this.onFinish,\n        enctype: \"multipart/form-data\" // onSubmit={this.handleSubmit}\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"project_name\",\n          label: \"Your project name\",\n          rules: [{\n            required: true,\n            message: 'Please input your project name'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input your project name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"list_tool\",\n          label: \"Tool\",\n          rules: [{\n            required: true,\n            message: 'Please choose tool'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 4,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"mythril\",\n                  style: {\n                    lineHeight: '32px'\n                  },\n                  children: \"Mythril\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"slither\",\n                  style: {\n                    lineHeight: '32px'\n                  },\n                  children: \"Slither\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"oyente\",\n                  style: {\n                    lineHeight: '32px'\n                  },\n                  children: \"Oyente\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 8,\n                children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  value: \"honeybadger\",\n                  style: {\n                    lineHeight: '32px'\n                  },\n                  children: \"Honeybadger\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          name: \"type\",\n          label: \"type\",\n          hasFeedback: true,\n          rules: [{\n            required: true,\n            message: 'Please input your type'\n          }],\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            placeholder: \"Please input your type\",\n            children: [/*#__PURE__*/_jsxDEV(Option, {\n              value: \"file\",\n              children: \"File\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Option, {\n              value: \"repo\",\n              children: \"Repo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, { ...formItemLayout,\n          name: \"linkRepo\",\n          label: \"Link Repo\",\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            placeholder: \"Please input link repo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          label: \"file\",\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"file\",\n            valuePropName: \"fileList\",\n            getValueFromEvent: normFile,\n            noStyle: true,\n            children: /*#__PURE__*/_jsxDEV(Upload.Dragger, {\n              name: \"files\",\n              beforeUpload: () => false,\n              fileList: normFile,\n              onChange: this.handleUpload,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-drag-icon\",\n                children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-text\",\n                children: \"Click or drag file to this area to upload\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"ant-upload-hint\",\n                children: \"Support for a single or bulk upload.\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Item, {\n          wrapperCol: {\n            span: 12,\n            offset: 6\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: loadings[2],\n            onClick: () => this.enterLoading(2),\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"resuls\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default MyUpload;","map":{"version":3,"sources":["/home/vuthaouet/blockchain/worthwhile-tool-smartcontract-frontend/src/api/upload.js"],"names":["React","useState","ReactDOM","Form","Select","InputNumber","Switch","Radio","Slider","Button","Upload","Rate","Checkbox","Row","Col","Input","InboxOutlined","Option","axios","combine_results_api","uploadfile","wortwhile","baseUrl","formItemLayout","labelCol","span","wrapperCol","normFile","e","console","log","Array","isArray","fileList","submitForm","values","formData","FormData","append","data","type","project_name","map","file","originFileObj","res","post","then","success","catch","err","alert","check","tick","element","Date","toLocaleTimeString","render","document","getElementById","MyUpload","Component","state","loadings","handleUpload","setState","onFinish","newLoadings","enterLoading","index","required","message","lineHeight","offset"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\nimport ReactDOM from 'react-dom'\nimport 'antd/dist/antd.css';\nimport '../index.css';\nimport {\n    Form,\n    Select,\n    InputNumber,\n    Switch,\n    Radio,\n    Slider,\n    Button,\n    Upload,\n    Rate,\n    Checkbox,\n    Row,\n    Col, Input,\n} from 'antd';\n\nimport {InboxOutlined} from '@ant-design/icons';\nimport {Option} from \"antd/es/mentions\";\nimport axios from \"axios\";\nimport {combine_results_api, uploadfile, wortwhile} from \"./wortwhile\";\n\nconst baseUrl = \"http://localhost:5000\";\nconst formItemLayout = {\n    labelCol: {\n        span: 6,\n    },\n    wrapperCol: {\n        span: 14,\n    },\n};\n\nconst normFile = (e) => {\n    console.log('Upload event:', e);\n\n    if (Array.isArray(e)) {\n        return e;\n    }\n\n    return e && e.fileList;\n};\n\nasync function submitForm(values) {\n    const formData = new FormData();\n    formData.append(\"type\", values['type']);\n    formData.append(\"project_name\", values[\"project_name\"]);\n    formData.append(\"list_tool\", values[\"list_tool\"]);\n    const data = {\n        type: values['type'],\n        project_name: values[\"project_name\"]\n    }\n    values[\"file\"].map((file) => {\n        formData.append(\"file\", file.originFileObj);\n        // data.file (\"file\", file.originFileObj);\n    });\n    console.log(\"formData.values()\")\n    console.log(...formData)\n    // let check = uploadfile(formData.)\n    let res = await axios.post(`${baseUrl}${'/wortwhile/uploadfile'}`, formData)\n        .then((res) => {\n            return {\n                success: true,\n                data: res.data,\n            }\n        })\n        .catch((err) => alert(\"File Upload Error\"));\n    if (res) {\n        console.log(res)\n        let check = await wortwhile(res.data)\n        await combine_results_api(values[\"project_name\"])\n    }\n\n\n}\n\nfunction tick() {\n    const element = (\n        <div>\n            <h1>Hello, world!</h1>\n            <h2>It is {new Date().toLocaleTimeString()}.</h2>\n        </div>\n    );\n    ReactDOM.render(element, document.getElementById('root'));\n}\n\nclass MyUpload extends React.Component {\n    state = {\n        loadings: [],\n    };\n\n    handleUpload = ({fileList}) => {\n        console.log(\"vào handleUpload\")\n        //---------------^^^^^----------------\n        // this is equivalent to your \"const img = event.target.files[0]\"\n        // here, antd is giving you an array of files, just like event.target.files\n        // but the structure is a bit different that the original file\n        // the original file is located at the `originFileObj` key of each of this files\n        // so `event.target.files[0]` is actually fileList[0].originFileObj\n        console.log('fileList', fileList);\n\n        // you store them in state, so that you can make a http req with them later\n        this.setState({fileList});\n    };\n    onFinish = async (values) => {\n        console.log(\"onFinish\")\n        console.log(values)\n        console.log(\"vào onFinish\")\n        // this.handleSubmit\n        await submitForm(values)\n        this.setState(({loadings}) => {\n            const newLoadings = [...loadings];\n            newLoadings[2] = false;\n\n            return {\n                loadings: newLoadings,\n            };\n        });\n    };\n    enterLoading = index => {\n        this.setState(({loadings}) => {\n            const newLoadings = [...loadings];\n            newLoadings[index] = true;\n\n            return {\n                loadings: newLoadings,\n            };\n        });\n        // setTimeout(() => {\n        //     this.setState(({ loadings }) => {\n        //         const newLoadings = [...loadings];\n        //         newLoadings[index] = false;\n        //\n        //         return {\n        //             loadings: newLoadings,\n        //         };\n        //     });\n        // }, 12000);\n    };\n\n    render() {\n        const {loadings} = this.state;\n        return (\n            <div>\n                <Form\n                    name=\"validate_other\"\n                    {...formItemLayout}\n                    onFinish={this.onFinish}\n                    enctype=\"multipart/form-data\"\n                    // onSubmit={this.handleSubmit}\n\n                >\n                    <Form.Item\n                        {...formItemLayout}\n                        name=\"project_name\"\n                        label=\"Your project name\"\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your project name',\n                            },\n                        ]}\n                    >\n                        <Input placeholder=\"Please input your project name\"/>\n                    </Form.Item>\n                    <Form.Item name=\"list_tool\" label=\"Tool\"\n                               rules={[\n                                   {\n                                       required: true,\n                                       message: 'Please choose tool',\n                                   },\n                               ]}>\n                        <Checkbox.Group>\n                            <Row>\n                                <Col span={4}>\n                                    <Checkbox\n                                        value=\"mythril\"\n                                        style={{\n                                            lineHeight: '32px',\n                                        }}\n                                    >\n                                        Mythril\n                                    </Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox\n                                        value=\"slither\"\n                                        style={{\n                                            lineHeight: '32px',\n                                        }}\n                                    >\n                                        Slither\n                                    </Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox\n                                        value=\"oyente\"\n                                        style={{\n                                            lineHeight: '32px',\n                                        }}\n                                    >\n                                        Oyente\n                                    </Checkbox>\n                                </Col>\n                                <Col span={8}>\n                                    <Checkbox\n                                        value=\"honeybadger\"\n                                        style={{\n                                            lineHeight: '32px',\n                                        }}\n                                    >\n                                        Honeybadger\n                                    </Checkbox>\n                                </Col>\n\n                            </Row>\n                        </Checkbox.Group>\n                    </Form.Item>\n                    <Form.Item\n                        name=\"type\"\n                        label=\"type\"\n                        hasFeedback\n                        rules={[\n                            {\n                                required: true,\n                                message: 'Please input your type',\n                            },\n                        ]}\n                    >\n                        <Select placeholder=\"Please input your type\">\n                            <Option value=\"file\">File</Option>\n                            <Option value=\"repo\">Repo</Option>\n                        </Select>\n                    </Form.Item>\n                    <Form.Item\n                        {...formItemLayout}\n                        name=\"linkRepo\"\n                        label=\"Link Repo\"\n                    >\n                        <Input placeholder=\"Please input link repo\"/>\n                    </Form.Item>\n                    <Form.Item label=\"file\">\n                        <Form.Item name=\"file\" valuePropName=\"fileList\" getValueFromEvent={normFile} noStyle>\n                            <Upload.Dragger name=\"files\" beforeUpload={() => false} fileList={normFile}\n                                            onChange={this.handleUpload}>\n                                <p className=\"ant-upload-drag-icon\">\n                                    <InboxOutlined/>\n                                </p>\n                                <p className=\"ant-upload-text\">Click or drag file to this area to upload</p>\n                                <p className=\"ant-upload-hint\">Support for a single or bulk upload.</p>\n                            </Upload.Dragger>\n                        </Form.Item>\n                    </Form.Item>\n\n                    <Form.Item\n                        wrapperCol={{\n                            span: 12,\n                            offset: 6,\n                        }}\n                    >\n                        <Button type=\"primary\" htmlType=\"submit\" loading={loadings[2]}\n                                onClick={() => this.enterLoading(2)}>\n                            Submit\n                        </Button>\n                    </Form.Item>\n                </Form>\n                <div id={\"resuls\"}>\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default MyUpload"]},"metadata":{},"sourceType":"module"}